MODULE factorialGcd;
	CONST id1 = 123;
	TYPE id2 = ARRAY 10  OF INTEGER ;
	VAR m, n, result: INTEGER;
	 recordid: RECORD
		id3: INTEGER;
	END;

	PROCEDURE gcd (VAR m , n: INTEGER);
		VAR t: INTEGER;
	BEGIN
		
		IF (m > 3) THEN
			t := 23
		
		END;
		WHILE (m MOD n # 0) DO
			t := m MOD n; 
			m := n;
			n := t
		END
	END gcd;

	PROCEDURE factorial  (n: INTEGER);
		VAR tmp : INTEGER;	
	begin	
		gcd(3, 5);
		read (tmp)
		
	END factorial;

	PROCEDURE fun1;
	var t: integer;
	BEGIN
		tmp( );
		WHILE  (7>3 ) DO
			t := m;
			m := n+2+3+4 + 5 * 6;
			n := t
		END;
		t := 23 *32+ 43   + 4543+3
	END fun1;

	PROCEDURE tmp;
		var t: integer;
	BEGIN
		fun1( );
		WHILE  (7>3 ) DO
			t := m;
			m := n+2+(3)+4 + 5 * 6;
			n := t
		END;
		t := 23 *32+ 43   + 4543+3
	END tmp;

begin
	READ(n);
	factorial(n); 
	WRITE(result);
	WRITELN;

	READ(m);
	READ(n);
	gcd(m, n);
	WRITE(result);
	WRITELN

END factorialGcd.